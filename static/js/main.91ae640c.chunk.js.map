{"version":3,"sources":["reportWebVitals.js","Redux/Actions/actions.js","Components/Container/Container.js","Utils/Constants.js","Common/Card/Card.js","Common/Tab/Tab.js","Common/Tabs/Tabs.js","Components/Filter/Filter.js","Components/History/History.js","Components/Summary/Summary.js","Components/Header/Header.js","Components/FilterPanel/FilterPanel.js","Redux/Reducers/reducers.js","Redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCH_DATA","TAB_SELECTED","UPDATE_FILTERS_FOR_DATA","getData","dispatch","type","payload","jsonData","setTabFilter","value","recieveTabFilter","addFilter","updateFilters","Container","props","useDispatch","useEffect","className","monthNames","Card","header","content","Tab","isActive","onClick","href","e","preventDefault","name","Tabs","children","Filter","tabSelected","useSelector","state","actualMonth","Date","getMonth","handleChangeTab","tab","date","History","data","filters","length","someFilterTypePayment","Object","values","typePayment","some","item","dataResult","dataForFilter","filter","moment","format","startWeek","startOf","startMonth","filterDataByDate","filtersOfData","entries","reduce","acc","el","push","includes","filterDataByTypePayment","map","icon","faCalculator","faLink","transaction","time","faCreditCard","numberCard","transactionIdBold","toLocaleString","deduction","id","showData","Summary","endMonth","endOf","summaryDataActualMonth","dateItem","actualYear","getFullYear","faInfoCircle","Header","handleOnClick","event","src","process","alt","faQuestionCircle","FilterPanel","filtersByStore","useState","showFilter","setShowFilter","setFilters","handleChangeCheckBoxOptions","target","checked","newFilters","todos","datafono","link","classFilter","faFilter","onChange","filtersFromStorage","JSON","parse","sessionStorage","getItem","initialFilters","initialTabSelected","store","combineReducers","setItem","stringify","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91ae640c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import jsonData from '../../Assets/Data.json';\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA'\r\nexport const TAB_SELECTED = 'TAB_SELECTED'\r\nexport const UPDATE_FILTERS_FOR_DATA = 'UPDATE_FILTERS_FOR_DATA'\r\n\r\nexport const recieveData = (value) => ({\r\n    type: FETCH_DATA,\r\n    payload: value\r\n})\r\nexport const recieveTabFilter = (value) => ({\r\n    type: TAB_SELECTED,\r\n    payload: value\r\n})\r\nexport const updateFilters = (value) => ({\r\n    type: UPDATE_FILTERS_FOR_DATA,\r\n    payload: value\r\n})\r\n\r\nexport const getData = () => dispatch => {\r\n    /**\r\n     * TODO: Fetch data from Database, for this example data is loaded from a Json file\r\n     */\r\n    return dispatch(recieveData(jsonData));\r\n}\r\nexport const setTabFilter = (value) => dispatch => {\r\n    return dispatch(recieveTabFilter(value))\r\n}\r\nexport const addFilter = (value) => dispatch => {\r\n    return dispatch(updateFilters(value))\r\n}\r\n","import './Container.scss';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Filter, History, Summary } from '..'\r\nimport { getData } from '../../Redux/Actions/actions';\r\n\r\nexport const Container = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            dispatch(getData());\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"containerApp\">\r\n            <Summary />\r\n            <Filter />\r\n            <History />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container;\r\n","export const monthNames = [\r\n    \"Enero\", \"Febrero\", \"Marzo\", \"Abril\",\r\n    \"Mayo\", \"Junio\", \"Julio\", \"Agosto\",\r\n    \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n];","import './Card.scss';\r\nimport React from 'react'\r\n\r\nconst Card = (props) => (\r\n    <div className={\"card \" + props.className}>\r\n        <header className=\"card-header\">\r\n            <div className=\"card-header-title\">\r\n                {props.header}\r\n            </div>\r\n        </header>\r\n        <div className=\"card-content\">\r\n            <div className=\"content\">\r\n                {props.content}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Card;","import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Tab = (props) => {\r\n    const handleOnClick = (event) => event.preventDefault();\r\n\r\n    return (\r\n        <li className={(props.isActive) ? 'is-active' : ''} onClick={props.onClick} >\r\n            <a href=\"/#\" onClick={(e) => handleOnClick(e)}>\r\n                <span>{props.name}</span>\r\n            </a>\r\n        </li >\r\n    )\r\n}\r\nTab.propTypes = {\r\n    isActive: PropTypes.bool.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\nexport default Tab;","import React from \"react\"\r\n\r\nconst Tabs = (props) => {\r\n    return (\r\n        <div className=\"tabs is-toggle is-toggle-rounded is-centered\">\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs","import './Filter.scss';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FilterPanel } from '../';\r\nimport { setTabFilter, addFilter } from '../../Redux/Actions/actions';\r\nimport { monthNames } from '../../Utils/Constants';\r\nimport { Tabs, Tab } from '../../Common';\r\n\r\nexport const Filter = () => {\r\n    const tabSelected = useSelector(state => state.tabSelected);\r\n    const actualMonth = monthNames[new Date().getMonth() + 1];\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChangeTab = (tab) => {\r\n        dispatch(setTabFilter(tab));\r\n        dispatch(addFilter({ date: tab }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tabs >\r\n                <Tab name=\"Hoy\" isActive={tabSelected === 'today'} onClick={() => handleChangeTab('today')} />\r\n                <Tab name=\"Esta Semana\" isActive={tabSelected === 'week'} onClick={() => handleChangeTab('week')} />\r\n                <Tab name={actualMonth} isActive={tabSelected === 'lastmonth'} onClick={() => handleChangeTab('lastmonth')} />\r\n            </Tabs>\r\n            <FilterPanel />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import './History.scss';\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { monthNames } from '../../Utils/Constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalculator, faLink, faCreditCard } from '@fortawesome/free-solid-svg-icons';\r\nimport Card from '../../Common/Card/Card';\r\nimport moment from 'moment';\r\n\r\nexport const History = (props) => {\r\n    const data = useSelector(state => state.data);\r\n    const filters = useSelector(state => state.filters);\r\n    const tabSelected = useSelector(state => state.tabSelected);\r\n\r\n    const showTitle = () => {\r\n        const actualMonth = monthNames[new Date().getMonth() + 1];\r\n        const filter = {\r\n            'today': 'hoy',\r\n            'week': 'esta semana',\r\n            'lastmonth': actualMonth\r\n        }[tabSelected];\r\n        return \"Tus ventas de \" + filter;\r\n    }\r\n\r\n    const typePaymentIcon = (typePayment) => {\r\n        return {\r\n            \"datafono\": <FontAwesomeIcon icon={faCalculator} />,\r\n            \"link\": <FontAwesomeIcon icon={faLink} />\r\n        }[typePayment]\r\n    }\r\n    const filterDataByDate = (dataForFilter) => {\r\n        let dataResult = [];\r\n        switch (filters.date) {\r\n            case 'today':\r\n                dataResult = dataForFilter.filter(item => {\r\n                    let dateSource = moment(new Date(item.date)).format(\"MM-DD-yyyy\");\r\n                    let dateToday = moment().format(\"MM-DD-yyyy\");\r\n                    return dateSource === dateToday;\r\n                })\r\n                break;\r\n            case 'week':\r\n                dataResult = dataForFilter.filter(item => {\r\n                    let startWeek = moment().startOf('isoWeek');\r\n                    let weekOfItem = moment(new Date(item.date));\r\n                    return weekOfItem > startWeek;\r\n                })\r\n                break;\r\n            case 'lastmonth':\r\n                dataResult = dataForFilter.filter(item => {\r\n                    let startMonth = moment().startOf('month').format(\"MM-DD-yyyy\");\r\n                    let monthOfItem = moment(new Date(item.date)).format(\"MM-DD-yyyy\")\r\n                    return monthOfItem >= startMonth;\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return dataResult;\r\n    }\r\n    const filterDataByTypePayment = (dataForFilter) => {\r\n        const filtersOfData = Object.entries(filters.typePayment).reduce((acc, el) => {\r\n            //If is different to \"todos\" and the value is true\r\n            if (el[0] !== \"todos\" && el[1]) {\r\n                acc.push(el[0])\r\n            }\r\n            return acc;\r\n        }, []);\r\n        return dataForFilter.filter(item => filtersOfData.includes(item.typePayment))\r\n    }\r\n\r\n    const showData = () => {\r\n        if (data.length === 0) return <></>;\r\n        const someFilterTypePayment = Object.values(filters.typePayment).some(item => item);\r\n        \r\n        let dataResult = [];\r\n        if (filters.date)\r\n            dataResult = filterDataByDate(data);\r\n        if (someFilterTypePayment)\r\n            dataResult = filterDataByTypePayment(dataResult);\r\n        return dataResult.map(item => (\r\n            <tr key={item.id}>\r\n                <th>\r\n                    {typePaymentIcon(item.typePayment)}\r\n                    {` ${item.transaction}`}</th>\r\n                <td>{item.date} {item.time}</td>\r\n                <td><FontAwesomeIcon icon={faCreditCard} />{` ${item.numberCard}`}</td>\r\n                <td>{item.transactionIdBold}</td>\r\n                <td className=\"value\">\r\n                    <div>{`$${item.value.toLocaleString()}`}</div>\r\n                    <div>{item.deduction && `Deducción Bold`}</div>\r\n                    <div className=\"deductionValue\">{item.deduction && `${item.deduction}`}</div>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n    const content = (\r\n        <div className=\"tableHistory\" >\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Transacción</th>\r\n                        <th>Fecha y hora</th>\r\n                        <th>Método de pago</th>\r\n                        <th>ID transacción Bold</th>\r\n                        <th>Monto</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {showData()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n    return (\r\n        <Card\r\n            className=\"cardHistory\"\r\n            header={showTitle()}\r\n            content={content}\r\n        />\r\n    )\r\n}\r\n\r\nexport default History;","import './Summary.scss';\r\nimport React from 'react'\r\nimport { monthNames } from '../../Utils/Constants';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Card from '../../Common/Card/Card';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nexport const Summary = () => {\r\n    const data = useSelector(state => state.data)\r\n    const startMonth = moment().startOf('month');\r\n    const endMonth = moment().endOf('month');\r\n\r\n    const filterDataActualMonth = data.filter(item => {\r\n        const dateItem = moment(new Date(item.date));\r\n        return dateItem >= startMonth && dateItem <= endMonth;\r\n    });\r\n\r\n    const getDataActualMonth = (acc, el) => {\r\n        return acc + el.value;\r\n    }\r\n    const summaryDataActualMonth = filterDataActualMonth.reduce(getDataActualMonth, 0);\r\n\r\n    const actualMonth = monthNames[new Date().getMonth() + 1];\r\n    const actualYear = new Date().getFullYear();\r\n\r\n    const header = (\r\n        <>\r\n            Total de ventas de {actualMonth}\r\n            <div className=\"iconInfo\" >\r\n                <FontAwesomeIcon icon={faInfoCircle} />\r\n            </div >\r\n        </>);\r\n\r\n    const content = (\r\n        <>\r\n            <div className=\"headerTitle\">{`$${summaryDataActualMonth.toLocaleString()}`}</div>\r\n            <br />\r\n            {actualMonth}, {actualYear}\r\n        </>\r\n    )\r\n    \r\n    return (\r\n        <Card\r\n            className=\"cardSummary\"\r\n            header={header}\r\n            content={content}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Summary;\r\n","import { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.scss';\n\nconst Header = () => {\n  const handleOnClick = (event) => {\n    event.preventDefault();\n  }\n  return (\n    <header className=\"main\">\n      <img className=\"logo\" src={process.env.PUBLIC_URL + '/Bold Logo.png'} alt=\"Bold\" />\n      <div className=\"buttons\">\n        <a className=\"button is-ghost\" href=\"/#\" onClick={(e) => handleOnClick(e)}>\n          Mi negocio\n        </a>\n        <a className=\"button is-ghost\" href=\"/#\" onClick={(e) => handleOnClick(e)}>\n          Ayuda\n          <FontAwesomeIcon icon={faQuestionCircle} />\n        </a>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import './FilterPanel.scss';\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\r\nimport { addFilter } from '../../Redux/Actions/actions';\r\n\r\nexport const FilterPanel = (props) => {\r\n    const filtersByStore = useSelector(state => state.filters);\r\n    const [showFilter, setShowFilter] = useState(false);\r\n    const [filters, setFilters] = useState(filtersByStore.typePayment);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleToggleFilter = () => {\r\n        setShowFilter(true);\r\n    }\r\n\r\n    const handleChangeCheckBoxOptions = (event) => {\r\n        const { name, checked } = event.target;\r\n        const newFilters = { ...filters, [name]: checked };\r\n        newFilters.todos = newFilters.datafono && newFilters.link\r\n        setFilters(newFilters);\r\n    }\r\n    const handleChangeCheckBoxTodos = (event) => {\r\n        const { checked } = event.target;\r\n        setFilters({ todos: checked, datafono: checked, link: checked });\r\n    }\r\n\r\n    const handleFilterApply = () => {\r\n        setShowFilter(false);\r\n        dispatch(addFilter({ typePayment: filters }));\r\n    }\r\n\r\n    const classFilter = `panel panel-custom ${(showFilter) ? '' : 'is-hidden'}`;\r\n    return (\r\n        <>\r\n            <button\r\n                className=\"button\"\r\n                onClick={() => handleToggleFilter()}>\r\n                <span className=\"icon\">\r\n                    <FontAwesomeIcon icon={faFilter} />\r\n                </span>\r\n                <span>FILTRAR</span>\r\n            </button>\r\n            <nav className={classFilter}>\r\n                <p className=\"panel-heading\">\r\n                    filtrar\r\n                </p>\r\n                <label className=\"panel-block\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"datafono\"\r\n                        checked={filters.datafono}\r\n                        onChange={handleChangeCheckBoxOptions}\r\n                    />Cobro con datafono\r\n                </label>\r\n                <label className=\"panel-block\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"link\"\r\n                        checked={filters.link}\r\n                        onChange={handleChangeCheckBoxOptions}\r\n                    />Cobros con link de pago\r\n                </label>\r\n                <label className=\"panel-block\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"todos\"\r\n                        checked={filters.todos}\r\n                        onChange={handleChangeCheckBoxTodos}\r\n                    />Ver Todos\r\n                </label>\r\n                <div className=\"panel-block panel-block-footer\">\r\n                    <button\r\n                        className=\"button bold is-link is-outlined is-fullwidth\"\r\n                        onClick={() => handleFilterApply()}\r\n                    >\r\n                        Aplicar\r\n                    </button>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterPanel;\r\n","import { FETCH_DATA, TAB_SELECTED, UPDATE_FILTERS_FOR_DATA } from \"../Actions/actions\"\r\nconst filtersFromStorage = JSON.parse(sessionStorage.getItem('filterForData'));\r\n\r\nexport function data(state = [], { type, payload }) {\r\n    switch (type) {\r\n        case FETCH_DATA:\r\n            return payload;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst initialFilters = {\r\n    date: (!!filtersFromStorage) ? filtersFromStorage.date : 'today',\r\n    typePayment: (!!filtersFromStorage) ? filtersFromStorage.typePayment : {\r\n        datafono: false,\r\n        link: false,\r\n        todos: false\r\n    },\r\n}\r\nexport function filters(state = initialFilters, { type, payload }) {\r\n    switch (type) {\r\n        case UPDATE_FILTERS_FOR_DATA:\r\n            const filters = { ...state, ...payload };\r\n            sessionStorage.setItem('filterForData', JSON.stringify(filters));\r\n            return filters;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialTabSelected = (!!filtersFromStorage) ? filtersFromStorage.date : 'today';\r\nexport function tabSelected(state = initialTabSelected, { type, payload }) {\r\n    switch (type) {\r\n        case TAB_SELECTED:\r\n            return payload;\r\n        default:\r\n            return state\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { data, tabSelected, filters } from './Reducers/reducers';\r\n\r\nconst store = combineReducers({\r\n    data,\r\n    tabSelected,\r\n    filters\r\n})\r\n\r\nexport default createStore(store, applyMiddleware(thunk));","import './index.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Header, Container } from './Components/';\nimport store from './Redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Header />\n      <Container />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}